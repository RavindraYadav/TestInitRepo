<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="2">
  <summary>this test fetching parameterized output value&amp;nbsp;and using its value in foreach loop as a list.</summary>
  <steps>
    <caseCall testCaseId="d47f0048-f285-4dfb-8cdb-72bd90a1419b" testItemId="1">
      <outputArguments>
        <outputArgument id="AccountRows">
          <name class="value" valueClass="string">AccountRows</name>
        </outputArgument>
      </outputArguments>
    </caseCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="5" title="Set Values: count">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">count</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="2" title="For Each: {AccountRows}=&gt;var">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="AccountRows"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">var</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="3">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="4" title="Set Values: val">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">val</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="AccountRows">
                            <filter class="index">
                              <index valueClass="decimal">4</index>
                            </filter>
                          </path>
                          <path element="Name"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="6" title="If: {$count = 10}">
              <arguments>
                <argument id="condition">
                  <value class="eq">
                    <lhs class="variable" topLevel="true">
                      <path element="count"/>
                    </lhs>
                    <rhs class="value" valueClass="decimal">10</rhs>
                  </value>
                </argument>
              </arguments>
              <clauses>
                <clause name="then" testItemId="7">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.Break" name="Break" testItemId="8"/>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="9" title="Set Values: count">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">count</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="add">
                          <lhs class="variable" topLevel="true">
                            <path element="count"/>
                          </lhs>
                          <rhs class="value" valueClass="decimal">1</rhs>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
