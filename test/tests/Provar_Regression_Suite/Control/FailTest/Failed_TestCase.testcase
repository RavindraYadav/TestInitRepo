<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="16">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: Bank_RetailDepartment (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">Bank_RetailDepartment</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Bank_RetailDepartment</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="uiApplicationName"/>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="vfDebug"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="environment"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="2" title="SOQL Query: select Name from Account where AnnualRevenue  = 700=&gt;AccountRows">
      <arguments>
        <argument id="soqlQuery">
          <value class="value" valueClass="string">select Name from Account where AnnualRevenue  = 700</value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">Bank_RetailDepartment</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">AccountRows</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="7" title="Assert: 10 LessThan {AccountRows}">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">10</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="AccountRows"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">LessThan</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Fail" name="Fail" testItemId="9" title="Fail Test: Error Message is required">
      <arguments>
        <argument id="message">
          <value class="value" valueClass="string">Error Message is required</value>
        </argument>
      </arguments>
      <expectedExceptions>
        <expectedException comparisonType="Contains" title="Match message">
          <assertionValue class="value" valueClass="string">Error Message is required</assertionValue>
        </expectedException>
      </expectedExceptions>
    </apiCall>
  </steps>
</testCase>
