<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase failureBehaviour="Continue" id="1">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1" title="Set Values: stringValue">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">stringValue</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">makepositive</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="2" title="Set Values: intValue">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">intValue</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">10</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="3" title="Set Values: decimalValue">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">decimalValue</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">10.050000</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="9" title="Set Values: blankValue">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">blankValue</value>
              </namedValue>
              <namedValue name="value"/>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="4" title="Assert: {stringValue} EqualTo makepositive">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">makepositive</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - EqualTo not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="5" title="Assert: {stringValue} NotEqualTo m@kepositive">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">m@kepositive</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - NotEquaTo not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="7" title="Assert: {stringValue} IsPresent test">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">test</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">IsPresent</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - isPresent not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="8" title="Assert: {blankValue} IsEmpty test">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="blankValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">test</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">IsEmpty</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - isEmpty not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="10" title="Assert: {stringValue} Matches makepositives">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">makepositives</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">Matches</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - Matches not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="11" title="Assert: {stringValue} NotMatches m@kepositive">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">m@kepositive</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotMatches</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - NotMatches not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="12" title="Assert: {stringValue} Contains make">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">make</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">Contains</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - Contains not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="13" title="Assert: {stringValue} NotContains maked">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">maked</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotContains</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - NotContains not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="14" title="Assert: {stringValue} StartsWith make">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">make</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">StartsWith</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - StartsWith not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="15" title="Assert: {stringValue} NotStartsWith makes">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">makes</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotStartsWith</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - NotStartsWith not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="16" title="Assert: {stringValue} EndsWith positive">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">positive</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EndsWith</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - EndsWith not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="17" title="Assert: {stringValue} NotEndsWith posi">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">posi</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotEndsWith</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="18" title="Assert: {intValue} GreaterThan 9">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">9</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">GreaterThan</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - GreaterThan not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="19" title="Assert: {intValue} GreaterThanOrEqualTo 10">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">10</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">GreaterThanOrEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - GreaterThanEqualTo not working for Equal values</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="20" title="Assert: {intValue} GreaterThanOrEqualTo 9">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">9</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">GreaterThanOrEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - GreaterThanEqualTo not working for Greater values</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="28" title="Assert: {intValue} LessThan 11">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">11</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">LessThan</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - LessThan not working</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="23" title="Assert: {intValue} LessThanOrEqualTo 10">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">10</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">LessThanOrEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - LessThanEqualTo not working for Equal values</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="22" title="Assert: {intValue} LessThanOrEqualTo 9">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="intValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">9</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">LessThanOrEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - LessThanEqualTo not working for Lesser values</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="25" title="Assert: {stringValue} NotEqualTo MAKEPOSITIVE">
      <tags/>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="stringValue"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">MAKEPOSITIVE</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">NotEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Assert - CaseSensitive not working</value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
</testCase>
