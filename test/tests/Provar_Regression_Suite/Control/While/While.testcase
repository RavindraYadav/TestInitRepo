<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="4">
  <summary>running a loop while count reaches to 4</summary>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="9" title="Set Values: count">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">count</value>
              </namedValue>
              <namedValue name="value">
                <value class="funcCall" id="Count">
                  <argument id="value">
                    <value class="variable">
                      <path element="Tokens"/>
                    </value>
                  </argument>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.DoWhile" name="DoWhile" testItemId="2" title="While: {count != 4}">
      <arguments>
        <argument id="condition">
          <value class="ne">
            <lhs class="variable">
              <path element="count"/>
            </lhs>
            <rhs class="value" valueClass="decimal">4</rhs>
          </value>
        </argument>
        <argument id="counterName">
          <value class="value" valueClass="string">LoopCounter</value>
        </argument>
        <argument id="counterStart">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="counterEnd">
          <value class="value" valueClass="decimal">5</value>
        </argument>
        <argument id="continueOnFailure">
          <value class="value" valueClass="boolean">true</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="3">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="5" title="Set Values: count">
              <tags/>
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">count</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="add">
                          <lhs class="variable">
                            <path element="count"/>
                          </lhs>
                          <rhs class="value" valueClass="decimal">1</rhs>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="7" title="Set Values: result">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">result</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">Finish</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
  <tags/>
</testCase>
