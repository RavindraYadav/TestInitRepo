<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="2">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="7" title="Split: 1,2,3,4=&gt;,=&gt;values">
      <arguments>
        <argument id="input">
          <value class="value" valueClass="string">1,2,3,4</value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string">,</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">values</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="8" title="For Each: {values}=&gt;value">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="values"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">value</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="9">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="18" title="Set Values: valueToCompare">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">valueToCompare</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="value"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="12" title="If: {value = 3}">
              <arguments>
                <argument id="condition">
                  <value class="eq">
                    <lhs class="variable">
                      <path element="value"/>
                    </lhs>
                    <rhs class="value" valueClass="decimal">3</rhs>
                  </value>
                </argument>
              </arguments>
              <clauses>
                <clause name="then" testItemId="11">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.Break" name="Break" testItemId="16">
                      <tags/>
                    </apiCall>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="17" title="Assert: {valueToCompare} EqualTo 3">
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="valueToCompare"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">3</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Break not working</value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
</testCase>
